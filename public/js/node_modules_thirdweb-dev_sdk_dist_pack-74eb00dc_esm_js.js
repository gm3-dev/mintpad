"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_thirdweb-dev_sdk_dist_pack-74eb00dc_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/pack-74eb00dc.esm.js":
/*!******************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/pack-74eb00dc.esm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pack": () => (/* binding */ Pack)
/* harmony export */ });
/* harmony import */ var _defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./defineProperty-fe02f37c.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/defineProperty-fe02f37c.esm.js");
/* harmony import */ var _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./paper-xyz-c4f1082a.esm.js */ "./node_modules/@thirdweb-dev/sdk/dist/paper-xyz-c4f1082a.esm.js");
/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! zod */ "./node_modules/zod/lib/index.mjs");
/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ethers */ "./node_modules/@ethersproject/constants/lib.esm/addresses.js");
/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ethers */ "./node_modules/@ethersproject/units/lib.esm/index.js");
/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ethers */ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC165_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC165.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC165.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC1155_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC1155.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155.json");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cross-fetch */ "./node_modules/cross-fetch/dist/browser-ponyfill.js");
/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js");
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_Forwarder_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/Forwarder.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/Forwarder.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IBurnableERC20_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDropSinglePhase_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC20_json__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC20.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMintableERC20_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMulticall_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMulticall.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMulticall.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ISignatureMintERC20_json__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IBurnableERC721_json__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IClaimableERC721_json__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDelayedReveal_json__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721Enumerable_json__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721Supply_json__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ILazyMint_json__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ILazyMint.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMintableERC721_json__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_SignatureMintERC721_json__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/SignatureMintERC721.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/SignatureMintERC721.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_DelayedReveal_json__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/DelayedReveal.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/DelayedReveal.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_DropSinglePhase1155_json__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/DropSinglePhase1155.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/DropSinglePhase1155.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IBurnableERC1155_json__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IClaimableERC1155_json__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC1155Enumerable_json__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IMintableERC1155_json__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ISignatureMintERC1155_json__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC20Metadata_json__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json");
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! fast-deep-equal */ "./node_modules/fast-deep-equal/index.js");
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC721Metadata_json__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IERC1155Metadata_json__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IDelayedRevealDeprecated_json__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_TWFactory_json__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/TWFactory.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/TWFactory.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_TWRegistry_json__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/TWRegistry.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/TWRegistry.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_ContractPublisher_json__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IThirdwebContract_json__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json");
/* harmony import */ var _thirdweb_dev_storage__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @thirdweb-dev/storage */ "./node_modules/@thirdweb-dev/storage/dist/thirdweb-dev-storage.esm.js");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IContractMetadata_json__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPermissions_json__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPermissions.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPermissions.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPlatformFee_json__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IPrimarySale_json__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_IRoyalty_json__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/IRoyalty.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json");
/* harmony import */ var _thirdweb_dev_contracts_js_dist_abis_Ownable_json__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @thirdweb-dev/contracts-js/dist/abis/Ownable.json */ "./node_modules/@thirdweb-dev/contracts-js/dist/abis/Ownable.json");


















































/**
 * @internal
 */

const CommonWrappableSchema = zod__WEBPACK_IMPORTED_MODULE_43__.z.object({
  contractAddress: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cD
});
/**
 * @internal
 */

const ERC20WrappableSchema = CommonWrappableSchema.extend({
  quantity: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cE
});
/**
 * @internal
 */

const ERC721WrappableSchema = CommonWrappableSchema.extend({
  tokenId: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cF
});
/**
 * @internal
 */

const ERC1155WrappableSchema = CommonWrappableSchema.extend({
  tokenId: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cF,
  quantity: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cF
});

/**
 * @internal
 */

const ERC20RewardSchema = ERC20WrappableSchema.omit({
  quantity: true
}).extend({
  quantityPerReward: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cE
});
/**
 * @internal
 */

const ERC721RewardSchema = ERC721WrappableSchema;
/**
 * @internal
 */

const ERC1155RewardSchema = ERC1155WrappableSchema.omit({
  quantity: true
}).extend({
  quantityPerReward: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cF
});
/**
 * @internal
 */

const ERC20RewardContentsSchema = ERC20RewardSchema.extend({
  totalRewards: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cF["default"]("1")
});
/**
 * @internal
 */

const ERC721RewardContentsSchema = ERC721RewardSchema;
/**
 * @internal
 */

const ERC1155RewardContentsSchema = ERC1155RewardSchema.extend({
  totalRewards: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cF["default"]("1")
});
/**
 * @internal
 */

zod__WEBPACK_IMPORTED_MODULE_43__.z.object({
  erc20Rewards: zod__WEBPACK_IMPORTED_MODULE_43__.z.array(ERC20RewardSchema).default([]),
  erc721Rewards: zod__WEBPACK_IMPORTED_MODULE_43__.z.array(ERC721RewardSchema).default([]),
  erc1155Rewards: zod__WEBPACK_IMPORTED_MODULE_43__.z.array(ERC1155RewardSchema).default([])
});
/**
 * @internal
 */

const PackRewardsOutputSchema = zod__WEBPACK_IMPORTED_MODULE_43__.z.object({
  erc20Rewards: zod__WEBPACK_IMPORTED_MODULE_43__.z.array(ERC20RewardContentsSchema).default([]),
  erc721Rewards: zod__WEBPACK_IMPORTED_MODULE_43__.z.array(ERC721RewardContentsSchema).default([]),
  erc1155Rewards: zod__WEBPACK_IMPORTED_MODULE_43__.z.array(ERC1155RewardContentsSchema).default([])
});
/**
 * @internal
 */

const PackMetadataInputSchema = PackRewardsOutputSchema.extend({
  packMetadata: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cG,
  rewardsPerPack: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cF["default"]("1"),
  openStartTime: _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cH["default"](new Date())
});
/**
 * @public
 */

/**
 * Create lootboxes of NFTs with rarity based open mechanics.
 *
 * @example
 *
 * ```javascript
 * import { ThirdwebSDK } from "@thirdweb-dev/sdk";
 *
 * const sdk = new ThirdwebSDK("{{chainName}}");
 * const contract = sdk.getPack("{{contract_address}}");
 * ```
 *
 * @public
 */

class Pack extends _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.aN {
  /**
   * Configure royalties
   * @remarks Set your own royalties for the entire contract or per pack
   * @example
   * ```javascript
   * // royalties on the whole contract
   * contract.royalties.setDefaultRoyaltyInfo({
   *   seller_fee_basis_points: 100, // 1%
   *   fee_recipient: "0x..."
   * });
   * // override royalty for a particular pack
   * contract.royalties.setTokenRoyaltyInfo(packId, {
   *   seller_fee_basis_points: 500, // 5%
   *   fee_recipient: "0x..."
   * });
   * ```
   */

  /**
   * @internal
   */
  constructor(network, address, storage) {
    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    let abi = arguments.length > 4 ? arguments[4] : undefined;
    let contractWrapper = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cn(network, address, abi, options.gasless && "openzeppelin" in options.gasless ? { ...options,
      gasless: {
        openzeppelin: { ...options.gasless.openzeppelin,
          useEOAForwarder: true
        }
      }
    } : options);
    super(contractWrapper, storage);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "abi", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "metadata", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "roles", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "encoder", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "events", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "estimator", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "royalties", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "interceptor", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "erc1155", void 0);

    (0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(this, "owner", void 0);

    this.abi = abi;
    this.erc1155 = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.aG(this.contractWrapper, this.storage);
    this.metadata = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.ah(this.contractWrapper, _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cI, this.storage);
    this.roles = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.ai(this.contractWrapper, Pack.contractRoles);
    this.royalties = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.aj(this.contractWrapper, this.metadata);
    this.encoder = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.ag(this.contractWrapper);
    this.estimator = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.aR(this.contractWrapper);
    this.events = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.aS(this.contractWrapper);
    this.interceptor = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.aT(this.contractWrapper);
    this.owner = new _paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.aW(this.contractWrapper);
  }
  /**
   * @internal
   */


  onNetworkUpdated(network) {
    this.contractWrapper.updateSignerOrProvider(network);
  }

  getAddress() {
    return this.contractWrapper.readContract.address;
  }
  /** ******************************
   * READ FUNCTIONS
   *******************************/

  /**
   * Get a single Pack
   *
   * @remarks Get all the data associated with every pack in this contract.
   *
   * By default, returns the first 100 packs, use queryParams to fetch more.
   *
   * @example
   * ```javascript
   * const pack = await contract.get(0);
   * console.log(packs;
   * ```
   */


  async get(tokenId) {
    return this.erc1155.get(tokenId);
  }
  /**
   * Get All Packs
   *
   * @remarks Get all the data associated with every pack in this contract.
   *
   * By default, returns the first 100 packs, use queryParams to fetch more.
   *
   * @example
   * ```javascript
   * const packs = await contract.getAll();
   * console.log(packs;
   * ```
   * @param queryParams - optional filtering to only fetch a subset of results.
   * @returns The pack metadata for all packs queried.
   */


  async getAll(queryParams) {
    return this.erc1155.getAll(queryParams);
  }
  /**
   * Get Owned Packs
   *
   * @remarks Get all the data associated with the packs owned by a specific wallet.
   *
   * @example
   * ```javascript
   * // Address of the wallet to get the packs of
   * const address = "{{wallet_address}}";
   * const packss = await contract.getOwned(address);
   * ```
   *
   * @returns The pack metadata for all the owned packs in the contract.
   */


  async getOwned(walletAddress) {
    return this.erc1155.getOwned(walletAddress);
  }
  /**
   * Get the number of packs created
   * @returns the total number of packs minted in this contract
   * @public
   */


  async getTotalCount() {
    return this.erc1155.totalCount();
  }
  /**
   * Get whether users can transfer packs from this contract
   */


  async isTransferRestricted() {
    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole((0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.bt)("transfer"), ethers__WEBPACK_IMPORTED_MODULE_46__.AddressZero);
    return !anyoneCanTransfer;
  }
  /**
   * Get Pack Contents
   * @remarks Get the rewards contained inside a pack.
   *
   * @param packId - The id of the pack to get the contents of.
   * @returns - The contents of the pack.
   *
   * @example
   * ```javascript
   * const packId = 0;
   * const contents = await contract.getPackContents(packId);
   * console.log(contents.erc20Rewards);
   * console.log(contents.erc721Rewards);
   * console.log(contents.erc1155Rewards);
   * ```
   */


  async getPackContents(packId) {
    const {
      contents,
      perUnitAmounts
    } = await this.contractWrapper.readContract.getPackContents(packId);
    const erc20Rewards = [];
    const erc721Rewards = [];
    const erc1155Rewards = [];

    for (let i = 0; i < contents.length; i++) {
      const reward = contents[i];
      const amount = perUnitAmounts[i];

      switch (reward.tokenType) {
        case 0:
          {
            const tokenMetadata = await (0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.ct)(this.contractWrapper.getProvider(), reward.assetContract);
            const rewardAmount = ethers__WEBPACK_IMPORTED_MODULE_47__.formatUnits(reward.totalAmount, tokenMetadata.decimals);
            erc20Rewards.push({
              contractAddress: reward.assetContract,
              quantityPerReward: amount.toString(),
              totalRewards: ethers__WEBPACK_IMPORTED_MODULE_48__.BigNumber.from(rewardAmount).div(amount).toString()
            });
            break;
          }

        case 1:
          {
            erc721Rewards.push({
              contractAddress: reward.assetContract,
              tokenId: reward.tokenId.toString()
            });
            break;
          }

        case 2:
          {
            erc1155Rewards.push({
              contractAddress: reward.assetContract,
              tokenId: reward.tokenId.toString(),
              quantityPerReward: amount.toString(),
              totalRewards: ethers__WEBPACK_IMPORTED_MODULE_48__.BigNumber.from(reward.totalAmount).div(amount).toString()
            });
            break;
          }
      }
    }

    return {
      erc20Rewards,
      erc721Rewards,
      erc1155Rewards
    };
  }
  /** ******************************
   * WRITE FUNCTIONS
   *******************************/

  /**
   * Create Pack
   * @remarks Create a new pack with the given metadata and rewards and mint it to the connected wallet.
   * @remarks See {@link Pack.createTo}
   *
   * @param metadataWithRewards - the metadata and rewards to include in the pack
   * @example
   * ```javascript
   * const pack = {
   *   // The metadata for the pack NFT itself
   *   packMetadata: {
   *     name: "My Pack",
   *     description: "This is a new pack",
   *     image: "ipfs://...",
   *   },
   *   // ERC20 rewards to be included in the pack
   *   erc20Rewards: [
   *     {
   *       assetContract: "0x...",
   *       quantityPerReward: 5,
   *       quantity: 100,
   *       totalRewards: 20,
   *     }
   *   ],
   *   // ERC721 rewards to be included in the pack
   *   erc721Rewards: [
   *     {
   *       assetContract: "0x...",
   *       tokenId: 0,
   *     }
   *   ],
   *   // ERC1155 rewards to be included in the pack
   *   erc1155Rewards: [
   *     {
   *       assetContract: "0x...",
   *       tokenId: 0,
   *       quantityPerReward: 1,
   *       totalRewards: 100,
   *     }
   *   ],
   *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now
   *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1
   * }
   *
   * const tx = await contract.create(pack);
   * ```
   */


  async create(metadataWithRewards) {
    const signerAddress = await this.contractWrapper.getSignerAddress();
    return this.createTo(signerAddress, metadataWithRewards);
  }
  /**
   * Add Pack Contents
   * @remarks Add contents to an existing pack.
   * @remarks See {@link Pack.addPackContents}
   *
   * @param packId - token Id of the pack to add contents to
   * @param packContents - the rewards to include in the pack
   * @example
   * ```javascript
   * const packContents = {
   *   // ERC20 rewards to be included in the pack
   *   erc20Rewards: [
   *     {
   *       assetContract: "0x...",
   *       quantityPerReward: 5,
   *       quantity: 100,
   *       totalRewards: 20,
   *     }
   *   ],
   *   // ERC721 rewards to be included in the pack
   *   erc721Rewards: [
   *     {
   *       assetContract: "0x...",
   *       tokenId: 0,
   *     }
   *   ],
   *   // ERC1155 rewards to be included in the pack
   *   erc1155Rewards: [
   *     {
   *       assetContract: "0x...",
   *       tokenId: 0,
   *       quantityPerReward: 1,
   *       totalRewards: 100,
   *     }
   *   ],
   * }
   *
   * const tx = await contract.addPackContents(packId, packContents);
   * ```
   */


  async addPackContents(packId, packContents) {
    const signerAddress = await this.contractWrapper.getSignerAddress();
    const parsedContents = PackRewardsOutputSchema.parse(packContents);
    const {
      contents,
      numOfRewardUnits
    } = await this.toPackContentArgs(parsedContents);
    const receipt = await this.contractWrapper.sendTransaction("addPackContents", [packId, contents, numOfRewardUnits, signerAddress]);
    const event = this.contractWrapper.parseLogs("PackUpdated", receipt === null || receipt === void 0 ? void 0 : receipt.logs);

    if (event.length === 0) {
      throw new Error("PackUpdated event not found");
    }

    const id = event[0].args.packId;
    return {
      id: id,
      receipt,
      data: () => this.erc1155.get(id)
    };
  }
  /**
   * Create Pack To Wallet
   * @remarks Create a new pack with the given metadata and rewards and mint it to the specified address.
   *
   * @param to - the address to mint the pack to
   * @param metadataWithRewards - the metadata and rewards to include in the pack
   *
   * @example
   * ```javascript
   * const pack = {
   *   // The metadata for the pack NFT itself
   *   packMetadata: {
   *     name: "My Pack",
   *     description: "This is a new pack",
   *     image: "ipfs://...",
   *   },
   *   // ERC20 rewards to be included in the pack
   *   erc20Rewards: [
   *     {
   *       assetContract: "0x...",
   *       quantityPerReward: 5,
   *       quantity: 100,
   *       totalRewards: 20,
   *     }
   *   ],
   *   // ERC721 rewards to be included in the pack
   *   erc721Rewards: [
   *     {
   *       assetContract: "0x...",
   *       tokenId: 0,
   *     }
   *   ],
   *   // ERC1155 rewards to be included in the pack
   *   erc1155Rewards: [
   *     {
   *       assetContract: "0x...",
   *       tokenId: 0,
   *       quantityPerReward: 1,
   *       totalRewards: 100,
   *     }
   *   ],
   *   openStartTime: new Date(), // the date that packs can start to be opened, defaults to now
   *   rewardsPerPack: 1, // the number of rewards in each pack, defaults to 1
   * }
   *
   * const tx = await contract.createTo("0x...", pack);
   * ```
   */


  async createTo(to, metadataWithRewards) {
    const uri = await (0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cu)(metadataWithRewards.packMetadata, this.storage);
    const parsedMetadata = PackMetadataInputSchema.parse(metadataWithRewards);
    const {
      erc20Rewards,
      erc721Rewards,
      erc1155Rewards
    } = parsedMetadata;
    const rewardsData = {
      erc20Rewards,
      erc721Rewards,
      erc1155Rewards
    };
    const {
      contents,
      numOfRewardUnits
    } = await this.toPackContentArgs(rewardsData);
    const receipt = await this.contractWrapper.sendTransaction("createPack", [contents, numOfRewardUnits, uri, parsedMetadata.openStartTime, parsedMetadata.rewardsPerPack, to]);
    const event = this.contractWrapper.parseLogs("PackCreated", receipt === null || receipt === void 0 ? void 0 : receipt.logs);

    if (event.length === 0) {
      throw new Error("PackCreated event not found");
    }

    const packId = event[0].args.packId;
    return {
      id: packId,
      receipt,
      data: () => this.erc1155.get(packId)
    };
  }
  /**
   * Open Pack
   *
   * @remarks - Open a pack to reveal the contained rewards. This will burn the specified pack and
   * the contained assets will be transferred to the opening users wallet.
   *
   * @param tokenId - the token ID of the pack you want to open
   * @param amount - the amount of packs you want to open
   *
   * @example
   * ```javascript
   * const tokenId = 0
   * const amount = 1
   * const tx = await contract.open(tokenId, amount);
   * ```
   */


  async open(tokenId) {
    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    const receipt = await this.contractWrapper.sendTransaction("openPack", [tokenId, amount]);
    const event = this.contractWrapper.parseLogs("PackOpened", receipt === null || receipt === void 0 ? void 0 : receipt.logs);

    if (event.length === 0) {
      throw new Error("PackOpened event not found");
    }

    const rewards = event[0].args.rewardUnitsDistributed;
    const erc20Rewards = [];
    const erc721Rewards = [];
    const erc1155Rewards = [];

    for (const reward of rewards) {
      switch (reward.tokenType) {
        case 0:
          {
            const tokenMetadata = await (0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.ct)(this.contractWrapper.getProvider(), reward.assetContract);
            erc20Rewards.push({
              contractAddress: reward.assetContract,
              quantityPerReward: ethers__WEBPACK_IMPORTED_MODULE_47__.formatUnits(reward.totalAmount, tokenMetadata.decimals).toString()
            });
            break;
          }

        case 1:
          {
            erc721Rewards.push({
              contractAddress: reward.assetContract,
              tokenId: reward.tokenId.toString()
            });
            break;
          }

        case 2:
          {
            erc1155Rewards.push({
              contractAddress: reward.assetContract,
              tokenId: reward.tokenId.toString(),
              quantityPerReward: reward.totalAmount.toString()
            });
            break;
          }
      }
    }

    return {
      erc20Rewards,
      erc721Rewards,
      erc1155Rewards
    };
  }
  /** *****************************
   * PRIVATE FUNCTIONS
   *******************************/


  async toPackContentArgs(metadataWithRewards) {
    const contents = [];
    const numOfRewardUnits = [];
    const {
      erc20Rewards,
      erc721Rewards,
      erc1155Rewards
    } = metadataWithRewards;
    const provider = this.contractWrapper.getProvider();
    const owner = await this.contractWrapper.getSignerAddress();

    for (const erc20 of erc20Rewards) {
      const normalizedQuantity = await (0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cv)(provider, erc20.quantityPerReward, erc20.contractAddress); // Multiply the quantity of one reward by the number of rewards

      const totalQuantity = normalizedQuantity.mul(erc20.totalRewards);
      const hasAllowance = await (0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cw)(this.contractWrapper, erc20.contractAddress, totalQuantity);

      if (!hasAllowance) {
        throw new Error(`ERC20 token with contract address "${erc20.contractAddress}" does not have enough allowance to transfer.\n\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\n\nawait sdk.getToken("${erc20.contractAddress}").setAllowance("${this.getAddress()}", ${totalQuantity});\n\n`);
      }

      numOfRewardUnits.push(erc20.totalRewards);
      contents.push({
        assetContract: erc20.contractAddress,
        tokenType: 0,
        totalAmount: totalQuantity,
        tokenId: 0
      });
    }

    for (const erc721 of erc721Rewards) {
      const isApproved = await (0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cx)(this.contractWrapper.getProvider(), this.getAddress(), erc721.contractAddress, erc721.tokenId, owner);

      if (!isApproved) {
        throw new Error(`ERC721 token "${erc721.tokenId}" with contract address "${erc721.contractAddress}" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getNFTCollection("${erc721.contractAddress}").setApprovalForToken("${this.getAddress()}", ${erc721.tokenId});\n\n`);
      }

      numOfRewardUnits.push("1");
      contents.push({
        assetContract: erc721.contractAddress,
        tokenType: 1,
        totalAmount: 1,
        tokenId: erc721.tokenId
      });
    }

    for (const erc1155 of erc1155Rewards) {
      const isApproved = await (0,_paper_xyz_c4f1082a_esm_js__WEBPACK_IMPORTED_MODULE_44__.cx)(this.contractWrapper.getProvider(), this.getAddress(), erc1155.contractAddress, erc1155.tokenId, owner);

      if (!isApproved) {
        throw new Error(`ERC1155 token "${erc1155.tokenId}" with contract address "${erc1155.contractAddress}" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getEdition("${erc1155.contractAddress}").setApprovalForAll("${this.getAddress()}", true);\n\n`);
      }

      numOfRewardUnits.push(erc1155.totalRewards);
      contents.push({
        assetContract: erc1155.contractAddress,
        tokenType: 2,
        totalAmount: ethers__WEBPACK_IMPORTED_MODULE_48__.BigNumber.from(erc1155.quantityPerReward).mul(ethers__WEBPACK_IMPORTED_MODULE_48__.BigNumber.from(erc1155.totalRewards)),
        tokenId: erc1155.tokenId
      });
    }

    return {
      contents,
      numOfRewardUnits
    };
  }
  /**
   * @internal
   */


  async call(functionName) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return this.contractWrapper.call(functionName, ...args);
  }

}

(0,_defineProperty_fe02f37c_esm_js__WEBPACK_IMPORTED_MODULE_45__._)(Pack, "contractRoles", ["admin", "minter", "asset", "transfer"]);




/***/ })

}]);